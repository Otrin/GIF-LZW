#ifndef LOADINGWORKER_H
#define LOADINGWORKER_H

#include <io.h>
#include <picture.h>
#include <QObject>

/**
 * @brief This Worker Class is moved to a Thread to load a Picture
 * without freezing the whole GUI
 *
 */
class LoadingWorker : public QObject {
    Q_OBJECT

private:
    IO *m_ioFile; // IO that deliveres the Picture from Constructor filePath
    Picture *m_picFromIO; // Picture generated by m_ioFile

public:
    /**
     * @brief Prepares m_ioFile to load p_filePath
     *
     * @param p_filePath Systempath to the File to load
     */
    LoadingWorker(QString p_filePath);
    /**
     * @brief Nothing to do here. Deletion is done in MainWindow.
     *
     */
    ~LoadingWorker();

public slots:
    /**
     * @brief Method that is called once this this worker gets the 'moveToThread' treatment
     *
     */
    void process();

signals:
    /**
     * @brief Signals the Thread that work is done
     *
     */
    void finished();
    /**
     * @brief Returns the Picture once it is ready
     *
     * @param p_pic Picture that was loaded from the p_filePath in the Constructor
     */
    void picReady(Picture *p_pic);
    /**
     * @brief Returns the IO File pointer.
     *
     * @param p_io Pointer to the IO file
     */
    void ioReady(IO *p_io);
    /**
     * @brief Signals the GUI that an Error occured
     *
     * @param err String containing the Error
     */
    void error(QString err);
};

#endif // LOADINGWORKER_H
